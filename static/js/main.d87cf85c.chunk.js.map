{"version":3,"sources":["images/sort.png","components/SortButton.jsx","components/NewRow.jsx","components/Table.jsx","components/SelectButtons.jsx","components/PageSlider.jsx","components/FindForm.jsx","components/SekectRow.jsx","components/AddRow.jsx","components/App.jsx","utils/Api.js","index.js"],"names":["SortButton","onClick","value","setToggleSort","toggleSort","Wrapper","Img","src","sort","styled","button","img","NewRow","id","firstName","lastName","email","phone","address","description","openRow","TH","streetAddress","city","state","zip","tr","th","Table","data","active","currentPage","useState","field","setField","dataSort","slice","a","b","sortByField","dataForDisplay","reverse","THEAD","TR","TBODY","map","table","thead","tbody","SelectButtons","openTable","isOpenTable","isLoading","Button","div","PageSlider","numberOfPages","nextPage","previousPage","lastPage","firstPage","ButtonActive","hoverButton","keyframes","FindForm","findInfo","searchText","setSearchText","onSubmit","e","preventDefault","Input","placeholder","onChange","target","form","input","SelectRow","selectRow","P","Span","Textarea","defaultValue","p","span","textarea","AddRow","addRow","setData","activeButton","setActiveButton","error","setError","activeField","setActiveField","handleChange","name","validationMessage","closest","checkValidity","ActiveFiealButton","Form","InputContainer","type","required","minLength","App","smallData","setSmallData","bigData","setBigData","setIsOpenTable","loading","setLoading","setNumberOfPages","setCurrentPage","setSelectRow","calculatePages","length","Math","ceil","useEffect","Promise","all","fetch","method","headers","then","res","ok","json","reject","status","catch","err","console","log","finally","Loader","size","newData","sortArray","forEach","item","Object","values","includes","push","sizeOfTable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d87cf85c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sort.071e059f.png\";","import styled from 'styled-components';\r\nimport sort from '../images/sort.png';\r\n\r\nfunction SortButton({onClick, value, setToggleSort, toggleSort}) {\r\n  const handleClick = () => {\r\n    onClick(value);\r\n    setToggleSort(!toggleSort)\r\n  };\r\n\r\n  return(\r\n    <Wrapper onClick={handleClick}  >\r\n      <Img src={sort} toggleSort={toggleSort} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SortButton;\r\n\r\nconst Wrapper = styled.button`\r\n\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width:40px;\r\n  height:40px;\r\n  object-fit: contain;\r\n  transform: ${({toggleSort}) => toggleSort ? 'scaleY(-1)' : 'none'};\r\n`;","import styled from 'styled-components';\r\n\r\nfunction NewRow({id, firstName, lastName, email, phone, address, description, openRow}) {\r\n  const handleClick = () =>{\r\n    openRow({id, firstName, lastName, email, phone, address, description})\r\n  }\r\n  \r\n  return(\r\n    <Wrapper onClick={handleClick}>\r\n      <TH>{id}</TH>\r\n      <TH>{firstName}</TH>\r\n      <TH>{lastName}</TH>\r\n      <TH>{email}</TH>\r\n      <TH>{phone}</TH>\r\n      <TH>{`${address.streetAddress}, ${address.city}, ${address.state}, ${address.zip}`}</TH>\r\n      <TH>{description}</TH>\r\n    </Wrapper>\r\n  )\r\n  \r\n}\r\n\r\nexport default NewRow;\r\n\r\nconst Wrapper = styled.tr``;\r\n\r\nconst TH = styled.th`\r\n  min-height:50px;\r\n  background-color:lightblue;\r\n`;","import styled from 'styled-components';\r\nimport SortButton from './SortButton';\r\nimport NewRow from './NewRow';\r\nimport { useState } from 'react';\r\n\r\nfunction Table({data, active, currentPage, openRow}) {\r\n  const [field, setField] = useState('')\r\n  const [toggleSort, setToggleSort] = useState(true);\r\n\r\n  function sortByField(field) {\r\n    if(toggleSort){\r\n      return (a, b) => a[field] > b[field] ? 1 : -1;\r\n    }\r\n    return (a, b) => a[field] > b[field] ? -1 : 1;\r\n  };\r\n\r\n  let dataSort = data.slice((currentPage-1)*50, currentPage*50)\r\n  dataSort.sort(sortByField(field));\r\n  let dataForDisplay=dataSort.reverse();\r\n\r\n  return(\r\n    <Wrapper active={active}>\r\n      <THEAD>\r\n        <TR>\r\n          <TH>ID <SortButton value={'id'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n          <TH>First Name <SortButton value={'firstName'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n          <TH>Last Name <SortButton value={'lastName'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n          <TH>Email <SortButton value={'email'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n          <TH>Phone <SortButton value={'phone'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n          <TH>Address <SortButton value={'address'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n          <TH>Description <SortButton value={'description'} onClick={setField} setToggleSort={setToggleSort} toggleSort={toggleSort} /> </TH>\r\n        </TR>\r\n      </THEAD>\r\n      <TBODY>\r\n        {\r\n          \r\n          dataForDisplay.map(data=><NewRow key={`${data.id}-${data.firstName}-${data.lastName}`} {...data} openRow={openRow}/>)\r\n        }\r\n      </TBODY>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n\r\nconst Wrapper = styled.table`\r\n  display: ${({active}) => active ? 'table-cell' : 'none'};\r\n`;\r\n\r\nconst THEAD = styled.thead``;\r\n\r\nconst TBODY = styled.tbody``;\r\n\r\nconst TR = styled.tr`\r\n\r\n`;\r\n\r\nconst TH = styled.th`\r\n  width:150px;\r\n  height:50px;\r\n  background-color:lightblue;\r\n`;","import styled from 'styled-components';\r\n\r\nfunction SelectButtons({openTable, isOpenTable, isLoading}) {\r\n  const handleClickSmall = () => {\r\n    openTable('small');\r\n  }\r\n  const handleClickBig = () => {\r\n    openTable('big');\r\n  }\r\n  \r\n  return(\r\n    <Wrapper isOpenTable={isOpenTable} isLoading={isLoading}>\r\n      <Button onClick={handleClickSmall}>Маленькая таблица</Button>\r\n      <Button onClick={handleClickBig}>Большая таблица</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectButtons;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  display: ${({isOpenTable, isLoading}) => !isLoading ? (!isOpenTable ? 'flex' : 'none') : 'none'};\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items:center;\r\n`;\r\nconst Button = styled.button`\r\n  min-height: 100px;\r\n  width:480px;\r\n  font-size: 50px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  margin-bottom: 30px;\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nfunction PageSlider({numberOfPages, active, currentPage, nextPage, previousPage, lastPage, firstPage}) {\r\n\r\n  if(currentPage===1){\r\n    return(\r\n      <Wrapper active={active} numberOfPages={numberOfPages}>\r\n        <ButtonActive>{currentPage}</ButtonActive>\r\n        <Button onClick={nextPage}>{currentPage+1}</Button>\r\n        <Button onClick={lastPage}>{numberOfPages}</Button>\r\n      </Wrapper>\r\n    );\r\n  } else if(currentPage===numberOfPages){\r\n    return(\r\n      <Wrapper active={active} numberOfPages={numberOfPages}>\r\n        <Button onClick={previousPage}>{currentPage-1}</Button>\r\n        <ButtonActive >{numberOfPages}</ButtonActive>\r\n      </Wrapper>\r\n    );\r\n  } else if(currentPage===(numberOfPages-1)){\r\n    return(\r\n      <Wrapper active={active} numberOfPages={numberOfPages}>\r\n        <Button onClick={previousPage}>{currentPage-1}</Button>\r\n        <ButtonActive>{currentPage}</ButtonActive>\r\n        <Button onClick={nextPage}>{currentPage+1}</Button>\r\n      </Wrapper>\r\n    );\r\n  } else if(currentPage>3){\r\n    return(\r\n      <Wrapper active={active} numberOfPages={numberOfPages}>\r\n        <Button onClick={firstPage}>{1}</Button>\r\n        <Button onClick={previousPage}>{currentPage-1}</Button>\r\n        <ButtonActive>{currentPage}</ButtonActive>\r\n        <Button onClick={nextPage}>{currentPage+1}</Button>\r\n        <Button onClick={lastPage}>{numberOfPages}</Button>\r\n      </Wrapper>\r\n    );\r\n  } else{\r\n    return(\r\n      <Wrapper active={active} numberOfPages={numberOfPages}>\r\n        <Button onClick={previousPage}>{currentPage-1}</Button>\r\n        <ButtonActive>{currentPage}</ButtonActive>\r\n        <Button onClick={nextPage}>{currentPage+1}</Button>\r\n        <Button onClick={lastPage}>{numberOfPages}</Button>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default PageSlider;\r\n\r\nconst Wrapper = styled.div`\r\n  justify-content: center;\r\n  margin: 10px 0; \r\n  display: ${({active, numberOfPages}) => active ? (numberOfPages>1) ? 'flex' : 'none' : 'none'};\r\n`;\r\n\r\nconst hoverButton = keyframes`\r\nto{\r\n  transform: scale(1.5);\r\n}\r\n`;\r\nconst Button = styled.button`\r\n  margin-right: 5px;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  :hover{\r\n    cursor: pointer;\r\n    animation: ${hoverButton} forwards 0.5s linear;\r\n  }\r\n`;\r\n\r\nconst ButtonActive = styled.button`\r\n  margin-right: 5px;\r\n  font-size: 30px;\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction FindForm({findInfo, active}){\r\n  const [searchText, setSearchText] = useState('');\r\n  \r\n  function handleChange(e){\r\n    setSearchText(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    findInfo(searchText);\r\n  }\r\n\r\n  return(\r\n    <Wrapper onSubmit={handleSubmit} active={active}>\r\n      <Input placeholder=\"Введите тест для поиска\" onChange={handleChange} />\r\n      <Button>Найти</Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FindForm;\r\n\r\nconst Wrapper = styled.form`\r\n  display: ${({active}) => active ? 'flex' : 'none'};\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\nmargin-right: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nfunction SelectRow({selectRow, active}){\r\n  const {firstName, lastName, address, description} = selectRow;\r\n\r\n  return(\r\n    <Wrapper active={active}>\r\n      <P>Выбран пользователь <Span>{`${firstName} ${lastName}`}</Span></P>\r\n      <P>Описание:</P>\r\n      <Textarea defaultValue={description} />\r\n      <P>Адрес проживания: <Span>{address.streetAddress}</Span> </P>\r\n      <P>Город: <Span>{address.city}</Span></P>\r\n      <P>Провинция/штат: <Span>{address.state}</Span></P>\r\n      <P>Индекс: <Span>{address.zip}</Span></P>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectRow;\r\n\r\nconst Wrapper = styled.div`\r\n  display: ${({active}) => active ? 'flex' : 'none'};\r\n  flex-direction: column;\r\n  margin: 30px 0;\r\n`;\r\n\r\nconst P = styled.p``;\r\n\r\nconst Span = styled.span`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Textarea = styled.textarea``;","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction AddRow({active, addRow}){\r\n  const [data, setData] = useState({\r\n    id: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    address:{\r\n      streetAddress: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    },\r\n    description: '',\r\n  });\r\n  const [activeButton, setActiveButton] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [activeField, setActiveField] = useState(false);\r\n\r\n  const handleChange = (e) =>{\r\n    const {name, value} = e.target;\r\n    setData({\r\n      ...data, \r\n      [name]: value,\r\n    });\r\n    setError({\r\n      ...error, \r\n      [name]: e.target.validationMessage,\r\n    });\r\n    setActiveButton(e.target.closest(\"form\").checkValidity());\r\n    return (setData, setError, setActiveButton);\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    addRow(data);\r\n  }  \r\n\r\n  const showForm = () =>{\r\n    setActiveField(true)\r\n  }  \r\n\r\n  return(\r\n    <Wrapper active={active} onSubmit={handleSubmit}>\r\n      <ActiveFiealButton activeField={activeField} onClick={showForm}>Добавить строку</ActiveFiealButton>\r\n      <Form activeField={activeField}>\r\n        <InputContainer>\r\n          <Input \r\n            type='number' \r\n            name='id'\r\n            placeholder='Введите ID'\r\n            required  \r\n            onChange={handleChange} \r\n          />\r\n          <Span>{error.id}</Span>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <Input \r\n            type='text' \r\n            name='firstName'\r\n            placeholder=\"Введите Имя\" \r\n            required\r\n            minLength=\"2\"  \r\n            onChange={handleChange} \r\n          />\r\n          <Span>{error.firstName}</Span>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <Input \r\n            type='text' \r\n            name='lastName'\r\n            placeholder=\"Введите Фамилию\" \r\n            required  \r\n            minLength=\"2\"  \r\n            onChange={handleChange} \r\n          />\r\n          <Span>{error.lastName}</Span>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <Input \r\n            type='email' \r\n            name=\"email\" \r\n            placeholder=\"Введите email\" \r\n            required  \r\n            onChange={handleChange} \r\n          />\r\n          <Span >{error.email}</Span>\r\n        </InputContainer>\r\n        <InputContainer>\r\n          <Input \r\n            type='text' \r\n            name=\"phone\" \r\n            placeholder=\"Введите телефон\" \r\n            required  \r\n            onChange={handleChange} \r\n          />\r\n          <Span >{error.phone}</Span>\r\n        </InputContainer>\r\n        <Button activeButton={activeButton}>Добавить</Button>\r\n      </Form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default AddRow;\r\n\r\nconst Wrapper = styled.div`\r\n  display: ${({active}) => active ? 'flex' : 'none'};\r\n  margin: 30px 0;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst ActiveFiealButton = styled.button`\r\n  display: ${({activeField}) => !activeField ? 'block' : 'none'};\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: ${({activeField}) => activeField ? 'block' : 'none'};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  margin-right: 5px;\r\n  min-height: 20px;\r\n  width: 300px;\r\n`;\r\nconst Span = styled.span`\r\n  margin-right: 5px;\r\n  height: 20px;\r\n  overflow: hidden;\r\n  max-width: 300px;\r\n  color: #FF0000;\r\n  font-size: 12px;\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 10px;\r\n  ${({activeButton}) => activeButton ? 'none' : 'disabled'};\r\n  background-color: lightcoral;\r\n  opacity: ${({activeButton}) => activeButton ? '1' : '0.5'};\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { getSmallData, getBigData} from '../utils/Api';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Table from './Table';\nimport SelectButtons from './SelectButtons';\nimport PageSlider from './PageSlider';\nimport FindForm from './FindForm';\nimport SelectRow from './SekectRow';\nimport AddRow from './AddRow';\n\nfunction App() {\n  const [smallData, setSmallData] = useState([]);\n  const [bigData, setBigData] = useState([]);\n  const [isOpenTable, setIsOpenTable] = useState(false);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [numberOfPages, setNumberOfPages] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectRow, setSelectRow] = useState({firstName:'', lastName:'', address:'', description:''});\n\n  const calculatePages = (data) => {\n    if(data.length<50){\n      return\n    } \n    setNumberOfPages(Math.ceil(data.length/50));    \n  };\n\n  const loadindData = () => {\n    Promise.all([\n      getSmallData(),\n      getBigData()\n    ])\n    .then(res=>{\n      const [smallData, bigData] = res;\n      if(res){\n        setSmallData(smallData);\n        setBigData(bigData)\n        \n      }\n    })\n    .catch(err =>{\n      console.log('Ошибка:', err);\n    })\n    .finally(() =>\n      {setLoading(false)}\n    );\n  }\n\n  useEffect(() =>{\n    loadindData();\n  }, []);\n\n  const openTable = (sizeOfTable) => {\n    setIsOpenTable(true);\n    if(sizeOfTable==='small'){\n      setData(smallData);\n      calculatePages(smallData);\n    } else{\n      setData(bigData);\n      calculatePages(bigData);\n    }\n  }\n\n  const nextPage = () => {\n    setCurrentPage(currentPage+1);\n  };\n\n  const previousPage = () => {\n    setCurrentPage(currentPage-1);\n  };\n\n  const lastPage = () => {\n    setCurrentPage(numberOfPages);\n  };\n\n  const firstPage = () => {\n    setCurrentPage(1);\n  };\n\n  const findInfo = (searchText) => {\n    var sortArray = []\n    data.forEach((item) => { \n      if(Object.values(item).includes(searchText)){\n        sortArray.push(item)\n      }\n    })\n    setData(sortArray)\n  }\n\n  const openRow = (data) => {\n    setSelectRow(data);\n  };\n\n  const addRow = (newData) => {\n    setData([newData, ...data])\n  };\n  \n  return (\n    <Wrapper>\n      <Loader isLoading={loading}> \n        <ClipLoader loading={loading} size={150} />\n      </Loader>\n      <AddRow active={isOpenTable} addRow={addRow} />\n      <FindForm findInfo={findInfo} active={isOpenTable}/>\n      <SelectButtons openTable={openTable} isOpenTable={isOpenTable} isLoading={loading} />\n      <PageSlider numberOfPages={numberOfPages} active={isOpenTable} currentPage={currentPage} nextPage={nextPage} previousPage={previousPage} lastPage={lastPage} firstPage={firstPage} />\n      <Table data={data} active={isOpenTable} currentPage={currentPage} openRow={openRow} />\n      <PageSlider numberOfPages={numberOfPages} active={isOpenTable} currentPage={currentPage} nextPage={nextPage} previousPage={previousPage} lastPage={lastPage} firstPage={firstPage} />\n      <SelectRow selectRow={selectRow} active={isOpenTable} />\n    </Wrapper>\n  );\n};\n\nexport default App;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Loader = styled.div`\n  display: ${({isLoading}) => isLoading ?  'flex' : 'none'};\n  justify-content: center;\n  align-items:center;\n  height: 100vh;\n  overflow: hidden;\n  position: absolute;\n  top: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n`;\n\n","\r\nconst SMALL_DATA_URL = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\nconst BIG_DATA_URL = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\r\n\r\nexport const getSmallData = () =>{\r\n  return fetch(`${SMALL_DATA_URL}`, {\r\n    method: 'GET',\r\n    headers:{\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    }\r\n  })\r\n  .then((res => {\r\n    if(!res.ok){\r\n      return Promise.reject({\r\n        status:res.status,\r\n      })\r\n    }\r\n    return res.json();\r\n  }));\r\n};\r\n\r\nexport const getBigData = () =>{\r\n  return fetch(`${BIG_DATA_URL}`, {\r\n    method: 'GET',\r\n    headers:{\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n    }\r\n  })\r\n  .then((res => {\r\n    if(!res.ok){\r\n      return Promise.reject({\r\n        status:res.status,\r\n      })\r\n    }\r\n    return res.json();\r\n  }));\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}